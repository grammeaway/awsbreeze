name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write  

jobs:
  build:
    name: Cross-compile and upload release artifacts
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Prepare output directory
        run: mkdir -p dist

      - name: Build binary and archive
        run: |
          NAME="awsbreeze"
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi

          BIN_NAME="${NAME}${EXT}"
          OUTPUT_DIR="dist/${NAME}-${{ matrix.goos }}-${{ matrix.goarch }}"
          mkdir -p "$OUTPUT_DIR"

          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o "$OUTPUT_DIR/$BIN_NAME" .

          cp LICENSE "$OUTPUT_DIR/"
          cp README.md "$OUTPUT_DIR/"
          
          # Archive
          cd dist
          tar -czvf "${NAME}-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz" "${NAME}-${{ matrix.goos }}-${{ matrix.goarch }}"
          cd ..

      - name: Generate SHA256 checksums
        run: |
          cd dist
          sha256sum *.tar.gz > SHA256SUMS

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.tar.gz
            dist/SHA256SUMS

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

